# Apache v2 license
#  Copyright (C) <2019> Intel Corporation
#
#  SPDX-License-Identifier: Apache-2.0
#

version: '3.4'

volumes:
  inventory-suite-data:

networks:
  main-net:
  internal-data-net:
  edgex-network:

secrets:
  environment-variables:
    file: ./secrets/configuration.json
  product-data-schema:
    file: ./secrets/schemas/ProdSchema.json
  advance-shipping-notice-schema:
    file: ./secrets/schemas/ASNSchema.json
  cluster-file-schema:
    file: ./secrets/schemas/ClusterSchema.json
  db-user:
    file: ./secrets/dbUser
  db-pass:
    file: ./secrets/dbPass
  db-setup:
    file: ./secrets/createdb.sh

x-postgres: &postgres-settings
  dbHost: "postgres-inventory"
  dbPort: "5432"
  dbSSLMode: "disable"

x-telemetry: &telemetry-settings
  telemetryEndpoint: ""
  telemetryDataStoreName: ""
  
x-logging: &logging
  logging:
    options: {max-file: '5', max-size: 100m}
  

services:  

  postgres-inventory:
    image: postgres:11
    user: "999:999"
    environment:
      POSTGRES_MULTIPLE_DATABASES: "inventory,product"
      POSTGRES_USER_FILE: /run/secrets/postgres-user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-pass
    networks:
      internal-data-net:
    <<: *logging
    volumes:
      - source: inventory-suite-data
        target: /var/lib/postgresql/data/
        type: volume
    secrets:
      - source: db-user
        target: postgres-user
        uid: '999' 
      - source: db-pass
        target: postgres-pass
        uid: '999' 
      - source: db-setup
        target: /docker-entrypoint-initdb.d/createdb.sh
        uid: '999' 
        mode: 0700

  inventory:    
    image: rsp/inventory-service:dev
    user: "2000:2000"
    ports:
      - "8090:8080"
    networks:
      - edgex-network
      - internal-data-net
      - main-net
    healthcheck:
      test: curl --fail -s http://localhost:8080/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    <<: *logging
    environment:
      <<: *postgres-settings
      <<: *telemetry-settings
      dbName: "inventory"
      loggingLevel: "debug"
      epcFilters: "[]"
      responseLimit: 10000      
      port: "8080"      
      cloudConnectorUrl: "http://cloud-connector:8080"
      mappingSkuUrl: "http://product-data:8080/skus/"
      rfidAlertURL: "http://alert:8080"
      serviceName: "Inventory Service"
      ageOuts: "front:10,back:60"
      dailyInventoryPercentage: "0.01"
      probUnreadToRead: "0.20"
      probInStoreRead: "0.75"
      probExitError: "0.10"
      purgingDays: "90"
      serverReadTimeOutSeconds: 900
      serverWriteTimeOutSeconds: 900
      contextEventFilterProviderID: ""
      triggerRulesEndpoint: "/triggerrules"
      triggerRulesOnFixedTags: "true"
      newerHandheldHavePriority: "true"
      cloudConnectorApiGatewayEndpoint: "/callwebhook"
      rfidAlertMessageEndpoint: "/alert/alertmessage"
      dailyInventoryPercentageLabel: "daily_turn"
      probUnreadToReadLabel: "becoming_readable"
      probInStoreReadLabel: "being_read"
      probExitErrorLabel: "exit_error"
      endpointConnectionTimedOutSeconds: 15
      advancedShippingNoticeFacilityID: "UNDEFINED_FACILITY"
      rulesUrl: ""
      cloudConnectorRetrySeconds: 30
      dailyTurnMinimumDataPoints: 2
      dailyTurnHistoryMaximum: 25
      dailyTurnComputeUsingMedian: "false"
      useComputedDailyTurnInConfidence: "true"
      probPlugin: "false"
    secrets:
      - source: environment-variables
        target: configuration.json

  alert:
    image: rsp/alert-service:dev
    user: "2000:2000"
    networks:
      - main-net
      - edgex-network
    healthcheck:
      test: curl --fail -s http://localhost:8080/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    <<: *logging
    environment:      
      <<: *telemetry-settings
      loggingLevel: "info"
      responseLimit: 10000
      secureMode: "true"
      skipCertVerify: "true"
      port: "8080"
      zeroMQ: "edgex-core-data:5563"
      cloudConnectorURL: "http://cloud-connector:8080"
      mappingSkuURL : "http://product-data:8080"
      watchdogSeconds: 120
      serviceName: "RFID Alert service"
      maxMissedHeartbeats: 3
      notificationChanSize: 100
      cloudConnectorEndpoint: "/callwebhook"
      heartbeatEndpoint: "/heartbeat"
      mappingSkuEndpoint: "/skus"
      batchSizeMax: 50
      sendNotWhitelistedAlert: "false"
    secrets:
      - source: environment-variables
        target: configuration.json

  cloud-connector:
    image: rsp/cloud-connector-service:dev
    user: "2000:2000"
    networks:
       - main-net
    <<: *logging
    environment:
      <<: *telemetry-settings
      loggingLevel: "info"
      responseLimit: 10000
      secureMode: "true"
      skipCertVerify: "true"
      port: "8080"
      serviceName: "Cloud Connector Service"
      httpsProxyURL: ""

  product-data:
    image: rsp/product-data-service:dev
    user: "2000:2000"
    ports:
      - "8081:8080"
    networks:
      - internal-data-net
      - main-net
      - edgex-network
    healthcheck:
      test: curl --fail -s http://localhost:8080/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    <<: *logging
    environment:                
      <<: *postgres-settings
      <<: *telemetry-settings
      loggingLevel: "info"
      dbName: "product"
      zeroMQ: "edgex-core-data:5563"
      telemetryEndpoint: "http://telemetry:8086"
      telemetryDataStoreName: "BadgerBay"
      responseLimit: 10000
      port: "8080"
      serviceName: "Product Data Service"
    secrets:
      - source: environment-variables
        target: configuration.json

  mqtt-device-service:
    image: rsp/mqtt-device-service:dev
    user: "2000:2000"
    ports:
      - "49982:49982"
    networks:
      - edgex-network
    extra_hosts:
      - "mosquitto-server:172.17.0.1"
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config

  data-provider:
    image: rsp/data-provider-service:dev
    user: "2000:2000"
    networks:      
      - edgex-network
      - main-net
    extra_hosts:
      - "mosquitto-server:172.17.0.1"
    <<: *logging
    environment:
      <<: *telemetry-settings
      no_proxy: "cloud-connector,edgex-core-consul,edgex-core-data"     
      NO_PROXY: "cloud-connector,edgex-core-consul,edgex-core-data"
      serviceName : "Data Provider"
      loggingLevel: "info"
      port: "8080"
      pipelinesDir: "/pipelines"
      templatesDir: "/templates"      
      secretsPath: "/run/secrets"
    secrets:
        - source: environment-variables
          target: configuration.json
        - source: product-data-schema
          target: /run/secrets/ProdSchema.json
        - source: advance-shipping-notice-schema
          target: /run/secrets/ASNSchema.json
        - source: cluster-file-schema
          target: /run/secrets/clusterSchema.json
    volumes:
    - ./data-provider-pipelines/:/pipelines/

  demo-ui:
    image: rsp/demo-ui:dev
    user: "2000:2000"
    ports:
      - "4200:4200"
