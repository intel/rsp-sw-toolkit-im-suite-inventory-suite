# INTEL CONFIDENTIAL
# Copyright (2017) Intel Corporation.

# The source code contained or described herein and all documents related to the source code ("Material")
# are owned by Intel Corporation or its suppliers or licensors. Title to the Material remains with
# Intel Corporation or its suppliers and licensors. The Material may contain trade secrets and proprietary
# and confidential information of Intel Corporation and its suppliers and licensors, and is protected by
# worldwide copyright and trade secret laws and treaty provisions. No part of the Material may be used,
# copied, reproduced, modified, published, uploaded, posted, transmitted, distributed, or disclosed in
# any way without Intel/'s prior express written permission.
# No license under any patent, copyright, trade secret or other intellectual property right is granted
# to or conferred upon you by disclosure or delivery of the Materials, either expressly, by implication,
# inducement, estoppel or otherwise. Any license under such intellectual property rights must be express
# and approved by Intel in writing.
# Unless otherwise agreed by Intel in writing, you may not remove or alter this notice or any other
# notice embedded in Materials by Intel or Intel's suppliers or licensors in any way. 

version: '3.4'

volumes:
  inventory-data:
  product-data:  

networks:
  main-net:
  internal-data-net:
  edgex-network:

secrets:
  environment-variables:
    file: ./secrets/configuration.json
  product-data-schema:
    file: ./secrets/schemas/ProdSchema.json
  advance-shipping-notice-schema:
    file: ./secrets/schemas/ASNSchema.json
  cluster-file-schema:
    file: ./secrets/schemas/ClusterSchema.json
  db-user:
    file: ./secrets/dbUser
  db-pass:
    file: ./secrets/dbPass
  db-setup:
    file: ./secrets/db-setup.sh

services:  
  postgres-inventory:
    image: postgres:12.1
    networks:
      internal-data-net:
    logging:
      options: {max-file: '5', max-size: 100m}
    volumes:
      - "product-data:/var/lib/postgresql/data/"   
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres-user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-pass
      POSTGRES_MULTIPLE_DATABASES: "inventory,product"
      # encryption is handled by the overlay network;
      # if the service is meant to be exposed externally,
      # then SSLMode should be set to a higher level
      DBSSLMODE: disable 
    secrets:
      - source: db-user
        target: postgres-user 
      - source: db-pass
        target: postgres-pass
      - source: db-setup
        target: /docker-entrypoint-initdb.d/db-setup.sh
        uid: '999' # postgres UID in this container 
        mode: 0700

  inventory:    
    image: rsp/inventory-service:dev
    user: "2000:2000"
    ports:
      - "8090:8080"
    networks:
      - edgex-network
      - internal-data-net
      - main-net
    healthcheck:
      test: curl --fail -s http://localhost:8080/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    logging:
      options: {max-file: '5', max-size: 100m}
    environment:
      serviceName: "Inventory Service"
      port: "8080"
      loggingLevel: "debug"

      dbHost: "postgres-inventory"
      dbPort: 5432
      dbName: "inventory"
      dbSSLMode: "disable"

      telemetryDataStoreName: "BadgerBay"
      telemetryEndpoint: "http://telemetry:8086"
      cloudConnectorUrl: "http://cloud-connector:8080"
      mappingSkuUrl: "http://product-data:8080/skus/"
      rfidAlertURL: "http://rfid-alert:8080"
      rulesUrl: ""

      triggerRulesEndpoint: "/triggerrules"
      cloudConnectorApiGatewayEndpoint: "/callwebhook"
      rfidAlertMessageEndpoint: "/rfid-alert/alertmessage"

      epcFilters: "[]"
      ageOuts: "front:10,back:60"

      dailyInventoryPercentage: "0.01"
      probUnreadToRead: "0.20"
      probInStoreRead: "0.75"
      probExitError: "0.10"
      purgingDays: "90"

      responseLimit: 10000
      serverReadTimeOutSeconds: 900
      serverWriteTimeOutSeconds: 900
      endpointConnectionTimedOutSeconds: 15
      cloudConnectorRetrySeconds: 30

      contextEventFilterProviderID: ""

      triggerRulesOnFixedTags: "true"
      newerHandheldHavePriority: "true"
      dailyTurnComputeUsingMedian: "false"
      useComputedDailyTurnInConfidence: "true"
      probPlugin: "false"

      dailyTurnMinimumDataPoints: 2
      dailyTurnHistoryMaximum: 25
      dailyInventoryPercentageLabel: "daily_turn"
      probUnreadToReadLabel: "becoming_readable"
      probInStoreReadLabel: "being_read"
      probExitErrorLabel: "exit_error"

      advancedShippingNoticeFacilityID: "UNDEFINED_FACILITY"

    secrets:
      - source: environment-variables
        target: configuration.json

  rfid-alert:
    image: rsp/rfid-alert-service:dev
    user: "2000:2000"
    networks:
      - main-net
      - edgex-network
    healthcheck:
      test: curl --fail -s http://localhost:8080/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    logging:
      options: {max-file: '5', max-size: 100m}
    environment:
      serviceName: "RFID Alert service"
      port: "8080"
      loggingLevel: "info"

      telemetryDataStoreName: "BadgerBay"
      telemetryEndpoint: "http://telemetry:8086"
      cloudConnectorURL: "http://cloud-connector:8080"
      mappingSkuURL : "http://product-data:8080"
      zeroMQ: "edgex-core-data:5563"

      cloudConnectorEndpoint: "/callwebhook"
      mappingSkuEndpoint: "/skus"

      secureMode: "true"
      skipCertVerify: "true"
      sendNotWhitelistedAlert: "false"

      responseLimit: 10000
      watchdogSeconds: 120
      maxMissedHeartbeats: 3
      notificationChanSize: 100
      batchSizeMax: 50
    secrets:
      - source: environment-variables
        target: configuration.json

  cloud-connector:
    image: rsp/cloud-connector-service:dev
    user: "2000:2000"
    networks:
       - main-net
    logging:
      options:
        max-size: "100m"
        max-file: "5"
    environment:
      serviceName: "Cloud Connector Service"
      port: "8080"
      loggingLevel: "info"
      telemetryDataStoreName: "BadgerBay"
      telemetryEndpoint: "http://telemetry:8086"
      httpsProxyURL: ""
      secureMode: "true"
      skipCertVerify: "true"
      responseLimit: 10000

  product-data:
    image: rsp/product-data-service:dev
    user: "2000:2000"
    ports:
      - "8081:8080"
    networks:
      - internal-data-net
      - main-net
      - edgex-network
    healthcheck:
      test: curl --fail -s http://localhost:8080/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    logging:
      options: {max-file: '5', max-size: 100m}
    environment:
      serviceName: "Product Data Service"
      port: "8080"
      loggingLevel: "info"
      dbHost: "http://postgres-inventory"
      dbPort: 5432
      dbName: "product"
      dbSSLMode: "disable"
      telemetryDataStoreName: "BadgerBay"
      telemetryEndpoint: "http://telemetry:8086"
      zeroMQ: "edgex-core-data:5563"
      responseLimit: 10000
    secrets:
      - source: environment-variables
        target: configuration.json

  mqtt-device-service:
    image: rsp/mqtt-device-service:dev
    ports:
      - "49982:49982"
    networks:
      - edgex-network
    extra_hosts:
      - "mosquitto-server:172.17.0.1"
    volumes:
      - db-data:/data/db
      - log-data:/edgex/logs
      - consul-config:/consul/config

  data-provider:
    image: rsp/data-provider-service:dev
    networks:      
      - edgex-network
      - main-net
    extra_hosts:
      - "mosquitto-server:172.17.0.1"
    logging:
      options:
        max-size: "100m"
        max-file: "5"    
    environment:
      no_proxy: "cloud-connector,edgex-core-consul,edgex-core-data"     
      NO_PROXY: "cloud-connector,edgex-core-consul,edgex-core-data"
      serviceName : "Data Provider"
      loggingLevel: "debug"
      telemetryEndpoint: "http://telemetry:8086"
      telemetryDataStoreName: "BadgerBay"
      port: "8080"
      pipelinesDir: "/pipelines"
      templatesDir: "/templates"      
      secretsPath: "/run/secrets"
    secrets:
        - source: environment-variables
          target: configuration.json
        - source: product-data-schema
          target: /run/secrets/ProdSchema.json
        - source: advance-shipping-notice-schema
          target: /run/secrets/ASNSchema.json
        - source: cluster-file-schema
          target: /run/secrets/clusterSchema.json
   volumes:      
   - ./data-provider-pipelines/:/pipelines/ 

  edgex-demo-ui:
    image: rsp/edgex-demo-ui:dev
    ports:
      - "4200:4200"
